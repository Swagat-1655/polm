{"ast":null,"code":"// Performance optimization utilities\n\n// Debounce function to limit the rate of function calls\nexport const debounce = (func, wait) => {\n  let timeout;\n  const executedFunction = function (...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n  executedFunction.cancel = () => {\n    clearTimeout(timeout);\n  };\n  return executedFunction;\n};\n\n// Throttle function to limit function calls per time period\nexport const throttle = (func, limit) => {\n  let inThrottle;\n  return function () {\n    const args = arguments;\n    const context = this;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n};\n\n// Check if user prefers reduced motion\nexport const prefersReducedMotion = () => {\n  return window.matchMedia && window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n};\n\n// Intersection Observer for lazy loading\nexport const createIntersectionObserver = (callback, options = {}) => {\n  const defaultOptions = {\n    root: null,\n    rootMargin: '50px',\n    threshold: 0.1,\n    ...options\n  };\n  if ('IntersectionObserver' in window) {\n    return new IntersectionObserver(callback, defaultOptions);\n  }\n\n  // Fallback for browsers without IntersectionObserver\n  return {\n    observe: () => {},\n    unobserve: () => {},\n    disconnect: () => {}\n  };\n};\n\n// Memory usage monitoring (development only)\nexport const monitorMemoryUsage = () => {\n  if (process.env.NODE_ENV === 'development' && 'performance' in window && 'memory' in performance) {\n    const memory = performance.memory;\n    console.log({\n      usedJSHeapSize: (memory.usedJSHeapSize / 1048576).toFixed(2) + ' MB',\n      totalJSHeapSize: (memory.totalJSHeapSize / 1048576).toFixed(2) + ' MB',\n      jsHeapSizeLimit: (memory.jsHeapSizeLimit / 1048576).toFixed(2) + ' MB'\n    });\n  }\n};\n\n// Cleanup function for component unmount\nexport const createCleanupHandler = () => {\n  const handlers = [];\n  return {\n    add: handler => handlers.push(handler),\n    cleanup: () => {\n      handlers.forEach(handler => {\n        try {\n          handler();\n        } catch (error) {\n          console.error('Cleanup error:', error);\n        }\n      });\n      handlers.length = 0;\n    }\n  };\n};\n\n// Check if device has good performance capabilities\nexport const isHighPerformanceDevice = () => {\n  // Check for hardware concurrency (number of CPU cores)\n  const cores = navigator.hardwareConcurrency || 1;\n\n  // Check for device memory (in GB)\n  const memory = navigator.deviceMemory || 1;\n\n  // Consider device high performance if it has 4+ cores and 4+ GB RAM\n  return cores >= 4 && memory >= 4;\n};\n\n// Optimize animations based on device performance\nexport const getOptimizedAnimationConfig = () => {\n  const isHighPerf = isHighPerformanceDevice();\n  const reduceMotion = prefersReducedMotion();\n  return {\n    enabled: !reduceMotion,\n    duration: reduceMotion ? 0 : isHighPerf ? 'normal' : 'reduced',\n    complexity: isHighPerf ? 'high' : 'low'\n  };\n};","map":{"version":3,"names":["debounce","func","wait","timeout","executedFunction","args","later","clearTimeout","setTimeout","cancel","throttle","limit","inThrottle","arguments","context","apply","prefersReducedMotion","window","matchMedia","matches","createIntersectionObserver","callback","options","defaultOptions","root","rootMargin","threshold","IntersectionObserver","observe","unobserve","disconnect","monitorMemoryUsage","process","env","NODE_ENV","performance","memory","console","log","usedJSHeapSize","toFixed","totalJSHeapSize","jsHeapSizeLimit","createCleanupHandler","handlers","add","handler","push","cleanup","forEach","error","length","isHighPerformanceDevice","cores","navigator","hardwareConcurrency","deviceMemory","getOptimizedAnimationConfig","isHighPerf","reduceMotion","enabled","duration","complexity"],"sources":["C:/Users/Asus/OneDrive/Desktop/react/src/utils/performance.js"],"sourcesContent":["// Performance optimization utilities\r\n\r\n// Debounce function to limit the rate of function calls\r\nexport const debounce = (func, wait) => {\r\n  let timeout;\r\n  const executedFunction = function(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n  \r\n  executedFunction.cancel = () => {\r\n    clearTimeout(timeout);\r\n  };\r\n  \r\n  return executedFunction;\r\n};\r\n\r\n// Throttle function to limit function calls per time period\r\nexport const throttle = (func, limit) => {\r\n  let inThrottle;\r\n  return function() {\r\n    const args = arguments;\r\n    const context = this;\r\n    if (!inThrottle) {\r\n      func.apply(context, args);\r\n      inThrottle = true;\r\n      setTimeout(() => inThrottle = false, limit);\r\n    }\r\n  };\r\n};\r\n\r\n// Check if user prefers reduced motion\r\nexport const prefersReducedMotion = () => {\r\n  return window.matchMedia && window.matchMedia('(prefers-reduced-motion: reduce)').matches;\r\n};\r\n\r\n// Intersection Observer for lazy loading\r\nexport const createIntersectionObserver = (callback, options = {}) => {\r\n  const defaultOptions = {\r\n    root: null,\r\n    rootMargin: '50px',\r\n    threshold: 0.1,\r\n    ...options\r\n  };\r\n\r\n  if ('IntersectionObserver' in window) {\r\n    return new IntersectionObserver(callback, defaultOptions);\r\n  }\r\n  \r\n  // Fallback for browsers without IntersectionObserver\r\n  return {\r\n    observe: () => {},\r\n    unobserve: () => {},\r\n    disconnect: () => {}\r\n  };\r\n};\r\n\r\n// Memory usage monitoring (development only)\r\nexport const monitorMemoryUsage = () => {\r\n  if (process.env.NODE_ENV === 'development' && 'performance' in window && 'memory' in performance) {\r\n    const memory = performance.memory;\r\n    console.log({\r\n      usedJSHeapSize: (memory.usedJSHeapSize / 1048576).toFixed(2) + ' MB',\r\n      totalJSHeapSize: (memory.totalJSHeapSize / 1048576).toFixed(2) + ' MB',\r\n      jsHeapSizeLimit: (memory.jsHeapSizeLimit / 1048576).toFixed(2) + ' MB'\r\n    });\r\n  }\r\n};\r\n\r\n// Cleanup function for component unmount\r\nexport const createCleanupHandler = () => {\r\n  const handlers = [];\r\n  \r\n  return {\r\n    add: (handler) => handlers.push(handler),\r\n    cleanup: () => {\r\n      handlers.forEach(handler => {\r\n        try {\r\n          handler();\r\n        } catch (error) {\r\n          console.error('Cleanup error:', error);\r\n        }\r\n      });\r\n      handlers.length = 0;\r\n    }\r\n  };\r\n};\r\n\r\n// Check if device has good performance capabilities\r\nexport const isHighPerformanceDevice = () => {\r\n  // Check for hardware concurrency (number of CPU cores)\r\n  const cores = navigator.hardwareConcurrency || 1;\r\n  \r\n  // Check for device memory (in GB)\r\n  const memory = navigator.deviceMemory || 1;\r\n  \r\n  // Consider device high performance if it has 4+ cores and 4+ GB RAM\r\n  return cores >= 4 && memory >= 4;\r\n};\r\n\r\n// Optimize animations based on device performance\r\nexport const getOptimizedAnimationConfig = () => {\r\n  const isHighPerf = isHighPerformanceDevice();\r\n  const reduceMotion = prefersReducedMotion();\r\n  \r\n  return {\r\n    enabled: !reduceMotion,\r\n    duration: reduceMotion ? 0 : (isHighPerf ? 'normal' : 'reduced'),\r\n    complexity: isHighPerf ? 'high' : 'low'\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}